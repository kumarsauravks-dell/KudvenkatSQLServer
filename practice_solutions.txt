Solution 17
Expand any Database -> Programability -> Functions -> System Functions -> String Functions
------------
Solution 18
1. select ASCII('A')
2. select CHAR(65)
3.  declare @Start int
    set @Start=65
    while (@Start<=90)
    begin
        print char(@Start)
        set @Start+=1
    end
4.  declare @Start int
    set @Start=97
    while(@Start<=122)
    begin
        print char(@Start)
        set @Start+=1
    end
5. declare @Start int
    set @Start=48
    while(@Start<=57)
    begin
        print char(@Start)
        set @Start+=1
    end
6. select LTRIM('   Hello   ')
    select RTRIM('   Hello   ')
    select RTRIM(LTRIM('   Hello   '))
7. select UPPER('Hello')
8. select LOWER('Hello')
9. select REVERSE('Hello')
10. select LEN('Hello')
11. Select LEFT('ABCDEF',3)
12. Select RIGHT('ABCDEF',3)
13. select CHARINDEX('@','sara@ccc.com')
14. select SUBSTRING('sara@ccc.com',6,7)
15. declare @str nvarchar(25)
    set @str='kumarsauravks@gmail.com'
    select SUBSTRING(@str,CHARINDEX('@',@str)+1,LEN(@str)-CHARINDEX('@',@str)+1) as Domain
16. select REPLICATE('kumar ',3)
17. select 'kumar'+ SPACE(5)+'saurav'
18. select REPLACE('saurav@gmail.com','gmail','rediffmail')
19. select STUFF('saurav@gmail.com',2,6,'*****')
20. select PATINDEX('%@gmail.com','saurav@gmail.com')

------------------
Solution 19.
 create table tblDateTime
 (
 c_time time,
 c_date date,
 c_smalldatetime smalldatetime,
 c_datetime datetime,
 c_datetime2 datetime2,
 c_datetimeoffset datetimeoffset
 )
 insert into tblDateTime values(GETDATE(),GETDATE(),GETDATE(),GETDATE(),GETDATE(),GETDATE())
 select * from tblDateTime
 ----------------------
 Solution 20. 
select ISDATE('Saurav')
select ISDATE(GetDate())
select ISDATE('2021-11-04 17:51:59.268')
select ISDATE('2021-11-04 17:51:59.2680955')
--------------------------
Solution 21
select DAY(GETDATE())
select DAY('05/15/2021')

select MONTH(GETDATE())
select MONTH('05/15/2021')

select YEAR(GETDATE())
select YEAR('05/15/2021')
----------------------
Solution 22
declare @birthday datetime
set @birthday='1993-09-20 10:20:30.627'
select DATENAME(WEEKDAY,@birthday) as Day, DATENAME(MONTH,@birthday) as Month
-----------------------
Solution 23
select DATEPART(MONTH,GETDATE())
select DATENAME(MONTH,GETDATE())
------------------------------
Solution 24
1. select DATEADD(MONTH,1,GETDATE())
2. select DATEADD(DAY,-20,GETDATE())
3. select DATEDIFF(MONTH,'11/30/2005','01/31/2006')
4. select DATEDIFF(DAY,'11/30/2005','01/31/2006')
-------------------------------
Solution 25
create function fnComputeAge(@DOB datetime)
returns nvarchar(50)
as 
begin 
declare @tempdate datetime,@years int, @months int, @days int

select @tempdate=@DOB

select @years=DATEDIFF(YEAR,@tempdate,GETDATE()) -
				case
					when (MONTH(@DOB) > MONTH(GETDATE())) or
					(MONTH(@DOB) = MONTH(GETDATE()) AND DAY(@DOB) > DAY(GETDATE()))
					THEN 1 ELSE 0
				end

select @tempdate=DATEADD(YEAR,@years,@tempdate)

select @months = DATEDIFF(MONTH,@tempdate,GETDATE()) -
				case 
					when DAY(@DOB) > DAY(GETDATE())
					then 1 else 0
				end
select @tempdate=DATEADD(MONTH,@months,@tempdate)

select @days=DATEDIFF(DAY,@tempdate,GETDATE())
	declare @Age nvarchar(50)
	set @Age=CAST(@years as nvarchar(4)) + ' Years '+ CAST(@months as nvarchar(2)) + ' Months '+CAST(@days as nvarchar(2))+ ' Days '

	return @Age
end

Execution -> select dbo.fnComputeAge('09/09/1993')
------------------------------------------
Solution 26
select CAST(GETDATE() as nvarchar) as ConvertedDate
select CONVERT(nvarchar,GETDATE()) as ConvertedDate
select Convert(nvarchar,GetDate(),103) as ConvertedDate
-------------------------------
Solution 27
declare @Id int
set @Id=101
select 'Saurav'+' - '+CAST(@Id as nvarchar)
--------------------------------
Solution 28
1. select ABS(-101.5) as AbsoluteValue
2. select CEILING(15.2),CEILING(-15.2)
3. select FLOOR(15.2),FLOOR(-15.2)
4. select POWER(2,3) as PowerValue
5. select SQUARE(9) as SqareValue
6. select SQRT(81) as SqrtValue
7. select FLOOR(RAND()*100) as RandomValue
8.  declare @Counter int
    set @Counter=1
    while(@Counter<=10)
    begin
    print FLOOR(RAND()*100)
    set @Counter+=1
    end
-------------------------------
Solution 29
create function CalculateAge(@DOB Date)
returns int
as begin
declare @Age int
set @Age=DATEDIFF(YEAR,@DOB,GETDATE())-
		case 
			when (MONTH(@DOB) > MONTH(GETDATE())) or
				(MONTH(@DOB) = MONTH(GETDATE()) and DAY(@DOB) > DAY(GETDATE()))
			then 1
			else 0
		end
return @AGE
end

select dbo.CalculateAge('09/09/1993') as Age
----------------------------------
Solution 30
create function fn_EmployeesByGender(@Gender nvarchar(10))
returns table
as 
return (select Id,Name,Gender,City
		from tblEmp2 
		where Gender=@Gender)

select * from dbo.fn_EmployeesByGender('Female')

-----------------------------------
Solution 31
select * from tblEmp2
create function fn_ITVF_GetEmployees()
returns table
as
return (select Name,Gender,City from tblEmp2)

select * from fn_ITVF_GetEmployees()
--------
create function fn_MSTVF_GetEmployees()
returns @Table Table (Name varchar(20),Gender varchar(10), City varchar(20))
as 
begin
	insert into @Table
	Select Name,Gender,City from tblEmp2
	return
end

select * from fn_MSTVF_GetEmployees()
------------------------------------------
Solution 32
create table #PersonDetails(Id int,Name varchar(20),Gender varchar(10))

insert into #PersonDetails values (1,'Kumar','Male')

select * from #PersonDetails 

select name from tempdb..sysobjects where name like '#PersonDetails%'
-------------------------------------------
Solution 33
create proc spCreateLocalTempTable
as
begin 
	create table #PersonDetails(Id int,Name varchar(20),Gender varchar(10))
	insert into #PersonDetails values (1,'Kumar','Male')
	insert into #PersonDetails values (2,'Kumari','Female')
	select * from #PersonDetails
end

exec spCreateLocalTempTable
--------------------------
Solution 34
select * from tblEmployee
select * from tblDepartment

create view vWEmployeeByDepartment
as
select e.Name,e.Gender,e.City,d.Name as Department
from tblEmployee e join tblDepartment d
on e.DepId=d.Id

select * from vWEmployeeByDepartment
sp_helptext vWEmployeeByDepartment
-------------------------
Solution 35
create table tblProduct(
Id int identity(1,1) primary key,
Name varchar(20),
UnitPrice int
)

insert into tblProduct values('Books',20)
insert into tblProduct values('Pens',14)
insert into tblProduct values('Pencils',11)
insert into tblProduct values('Clips',10)

select * from tblProduct

create table tblProductSales(
Id int identity(1,1) primary key,
ProductId int,
QuantitySold int
)

insert into tblProductSales values (1,10)
insert into tblProductSales values (3,23)
insert into tblProductSales values (4,21)
insert into tblProductSales values (2,12)
insert into tblProductSales values (1,13)
insert into tblProductSales values (3,12)
insert into tblProductSales values (4,13)
insert into tblProductSales values (1,11)
insert into tblProductSales values (2,12)
insert into tblProductSales values (1,14)

select * from tblProductSales

create view vWTotalSalesByProduct
with schemabinding
as
select Name,
Sum(IsNull((QuantitySold*UnitPrice),0)) as TotalSales,
Count_Big(*) as TotalTransactions
from dbo.tblProductSales
join dbo.tblProduct
on dbo.tblProduct.Id=dbo.tblProductSales.ProductId
group by Name

select * from vWTotalSalesByProduct
create unique clustered index UIX_vwTotalSalaryByProduct_Name on vWTotalSalesByProduct(Name)
-------------------------------------------
Solution 36

1. 
create table tblEmpl(Id int identity(1,1) primary key,Name varchar(20),Salary int , Gender varchar(10))
create table tblEmplAudit(Id int identity(1,1),AuditData varchar(80))

create trigger tr_tblEmpl_forInsert
on tblEmpl
for insert
as
begin 
	declare @Id int
	select @Id=Id from inserted

	insert into tblEmplAudit
	values ('A new Employee with Id = '+CAST(@Id as nvarchar(5))+
	' is added on '+CAST(GETDATE() as nvarchar(20)))
end

select * from tblEmpl
select * from tblEmplAudit

insert into tblEmpl values('Sam',4000,'Male')
insert into tblEmpl values('Suman',5000,'Female')
------
2.
create trigger tr_tblEmpl_forDelete
on tblEmpl
for delete
as
begin 
	declare @Id int
	select @Id=Id from deleted

	insert into tblEmplAudit
	values ('An existing Employee with Id = '+CAST(@Id as nvarchar(5))+
	' is deleted on '+CAST(GETDATE() as nvarchar(20)))
end

select * from tblEmpl
select * from tblEmplAudit

delete from tblEmpl where Name='Suman'
-------
3.
create trigger tr_tblEmpl_ForUpdate
on tblEmpl
for Update
as
begin
	declare @Id int
	declare @OldName nvarchar(20),@NewName nvarchar(20)
	declare @OldSalary int, @NewSalary int
	declare @OldGender nvarchar(10),@NewGender nvarchar(10)

	Declare @AuditString nvarchar(1000)

	select * into #TempTable from inserted

	while(Exists(select Id from #TempTable))
	begin
		set @AuditString=''
		select top 1 @Id=Id,@NewName=Name,@NewGender=Gender,@NewSalary=Salary from #TempTable
		select @OldName=Name,@OldGender=Gender,@OldSalary=Salary from deleted where Id=@Id

		set @AuditString='Employee with Id = '+CAST(@Id as nvarchar(4))+' changed '
		if(@OldName <> @NewName)
			set @AuditString=@AuditString+' Name from '+@OldName+' to ' +@NewName
		if(@OldGender <> @NewGender)
			set @AuditString=@AuditString+' Gender from '+@OldGender+' to ' +@NewGender
		if(@OldSalary <> @NewSalary)
			set @AuditString=@AuditString+' Salary from '+CAST(@OldSalary as nvarchar(10))+' to ' +CAST(@NewSalary as nvarchar(10))

		insert into tblEmplAudit values(@AuditString)
		delete from #TempTable
	end
end

update tblEmpl set Name='Saurav',Gender='Male',Salary=2000
-------------------------------------------------------
Solution 37
1.
create table tblEmpl1(Id int primary key,Name varchar(20),Gender varchar(10),DepartmentId int)
create table tblDept1(Id int,Name varchar(20))

select * from tblEmpl1
select * from tblDept1

insert into tblEmpl1 values(1,'John','Male',3)
insert into tblEmpl1 values(2,'Mike','Male',2)
insert into tblEmpl1 values(3,'Pam','Female',1)
insert into tblEmpl1 values(4,'Todd','Male',4)
insert into tblEmpl1 values(5,'Sara','Female',1)
insert into tblEmpl1 values(6,'Ben','Male',3)

insert into tblDept1 values(1,'IT')
insert into tblDept1 values(2,'Payroll')
insert into tblDept1 values(3,'HR')
insert into tblDept1 values(4,'Admin')

create view vwEmplDetails
as
select e.Id,e.Name,Gender,d.Name as Depatment from tblEmpl1 e join tblDept1 d
on e.DepartmentId=d.Id 

select * from vwEmplDetails

create trigger tr_vwEmplDetails_InsteadOfInsert
on vwEmplDetails
instead of insert
as
begin
	declare @DeptId int
	select @DeptId=d.Id from tblDept1 d join inserted i on i.Depatment=d.Name
	if(@DeptId is null)
	begin
		raiserror('Invalid Department Name, Statement terminated',16,1)
		return
	end
	insert into tblEmpl1(Id,Name,Gender,DepartmentId)
	Select Id,Name,Gender,@DeptId from inserted
end

insert into vwEmplDetails values(7,'Valarie','Female','IT')
---
2.
create trigger tr_vwEmplDetails_InsteadOfUpdate
on vwEmplDetails
instead of update
as
begin
	-- if empId is updated
	if(update(Id))
	begin
		raiserror('Id cannot be changed',16,1)
		return
	end
	--if DepName is updated
	if(UPDATE(Depatment))
	begin
		declare @DeptId int
		select @DeptId=d.Id from tblDept1 d join inserted i on i.Depatment=d.Name
		if(@DeptId is null)
		begin
			raiserror('Invalid Department Name',16,1)
			return
		end
		update tblEmpl1 set DepartmentId=@DeptId from inserted join tblEmpl1 on tblEmpl1.Id=inserted.Id
	end
	-- if gender is updated
	if(UPDATE(Gender))
	begin
		Update tblEmpl1 set Gender=inserted.Gender from inserted join tblEmpl1 on tblEmpl1.Id=inserted.Id
	end
	-- if Name is updated
	if(Update(Name))
	begin
		update tblEmpl1 set Name=inserted.Name from inserted join tblEmpl1 on tblEmpl1.Id=inserted.Id
	end
end

update vwEmplDetails set Depatment='IT' where Id=1
update vwEmplDetails set Name='Johny',Gender='Female' ,Depatment='Payroll' where Id=1
----
3.
create trigger tr_vwEmplDetails_InsteadOfDelete
on vwEmplDetails
instead of delete
as
begin
	delete tblEmpl1 from tblEmpl1 join deleted on tblEmpl1.Id=deleted.Id
	--subquery
	--delete from tblEmpl1 where Id in (Select Id from deleted)
end
delete from vwEmplDetails where Id=7
delete from vwEmplDetails where Id IN (1,2)

----------------------------------------------------------------------
